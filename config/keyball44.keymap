#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESCAPE        &kp Q         &kp W         &kp E        &kp R            &kp T                   &kp Y        &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp TAB           &kp A         &kp S         &kp D        &kp F            &kp G                   &kp H        &kp J  &kp K      &kp L    &kp COLON  &kp ENTER
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C        &kp V            &kp B                   &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &lt 1 SPACE  &lt 2 LG(SPACE)             &lt 2 ENTER  &lt 1 SPACE                                        &to 4
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5              &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0       &kp DELETE
&trans     &trans        &trans        &trans        &trans        &trans                    &trans        &kp SEMICOLON  &kp COLON     &kp SQT       &kp DOUBLE_QUOTES  &trans
&trans     &trans        &trans        &trans        &trans        &trans                    &trans        &trans         &trans        &trans        &trans             &trans
&trans     &trans        &trans        &trans        &trans                          &trans  &trans                                                                      &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT              &kp CARET       &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DELETE
&trans     &trans           &trans       &none     &none       &none                    &kp MINUS       &kp EQUAL      &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&none      &none            &none        &none     &none       &none                    &kp UNDERSCORE  &kp PLUS       &kp PIPE       &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&none      &none            &trans       &trans    &trans                       &trans  &trans                                                                                     &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp F1  &kp F2   &kp F3   &kp F4   &none              &none  &none  &none  &none  &none  &none
&none   &kp F5  &kp F6   &kp F7   &kp F8   &none              &none  &none  &none  &none  &none  &none
&none   &kp F9  &kp F10  &kp F11  &kp F12  &none              &none  &none  &none  &none  &none  &none
&trans  &trans  &trans   &trans   &trans              &trans  &mo 3                              &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp LC(LS(TAB))  &kp LC(TAB)           &none           &kp UP_ARROW    &none            &none                 &bt BT_SEL 0  &bt BT_SEL 1  &none      &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans           &kp LG(A)             &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_UP             &none         &none         &none      &none       &none              &none
&trans           &kp LG(Z)             &kp LG(X)       &kp LG(C)       &kp LG(V)        &kp PG_DN             &none         &mkp LCLK     &mkp MCLK  &mkp RCLK   &kp BACKSPACE      &kp DELETE
&kp LG(S)        &kp LS(LG(NUMBER_4))  &kp LEFT_GUI    &kp LEFT_SHIFT  &kp LEFT_ALT                    &none  &kp SPACE                                                             &to 0
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
