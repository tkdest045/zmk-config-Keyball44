#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESCAPE        &kp Q         &kp W         &kp E      &kp R  &kp T             &kp Y  &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp TAB           &kp A         &kp S         &kp D      &kp F  &kp G             &kp H  &kp J  &kp K      &kp L    &kp COLON  &kp SQT
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C      &kp V  &kp B             &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp ENTER
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &kp SPACE  &mo 3             &mo 2  &mo 1                                        &kp LG(SPACE)
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp GRAVE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5             &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9      &kp NUMBER_0       &kp DELETE
&none           &none         &none         &none         &none         &none                    &none         &kp MINUS     &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LEFT_SHIFT  &none         &none         &none         &none         &none                    &none         &none         &none         &none             &none              &none
&none           &none         &kp LEFT_GUI  &kp SPACE     &none                           &none  &mo 1                                                                          &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp DOLLAR  &kp PERCENT             &kp CARET  &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DEL
&none      &none            &none         &none      &none       &none                   &none      &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&none      &none            &none         &none      &none       &none                   &none      &none           &none         &none                 &none                  &none
&none      &none            &kp LEFT_GUI  &kp SPACE  &trans                       &mo 2  &none                                                                                 &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&bt BT_SEL 0  &none         &none            &none            &none           &none                        &none          &none      &msc SCRL_UP    &none      &none  &trans
&bt BT_SEL 1  &none         &kp GRAVE        &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)                  &none          &mkp LCLK  &mkp MCLK       &mkp RCLK  &none  &kp C_VOLUME_UP
&none         &none         &kp LEFT_SHIFT   &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW              &none          &none      &msc SCRL_DOWN  &none      &none  &kp C_VOLUME_DOWN
&kp LEFT_ALT  &kp LEFT_GUI  &kp LG(LS(TAB))  &kp LG(TAB)      &mo 3                                &trans  &kp LG(SPACE)                                               &kp C_MUTE
            >;
        };
    };
};
