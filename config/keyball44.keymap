#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESCAPE        &kp Q         &kp W         &kp E        &kp R            &kp T                       &kp Y        &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp TAB           &kp A         &kp S         &kp D        &kp F            &kp G                       &kp H        &kp J  &kp K      &kp L    &kp SEMI   &kp SQT
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C        &kp V            &kp B                       &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &lt 1 SPACE  &lt 2 LG(SPACE)             &lt 1 LG(SPACE)  &lt 2 ENTER                                        &kp LG(SPACE)
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3    &kp NUMBER_4    &kp NUMBER_5                 &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8    &kp NUMBER_9     &kp NUMBER_0  &kp C_MUTE
&none      &none         &none           &none           &kp UP_ARROW    &none                        &none         &none           &kp UP_ARROW    &none            &none         &kp C_VOLUME_UP
&trans     &none         &kp LEFT_SHIFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW              &none         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none         &kp C_VOLUME_DOWN
&trans     &trans        &trans          &trans          &trans                               &trans  &trans                                                                       &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT              &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none      &none            &none        &none     &none       &none                    &kp MINUS       &kp EQUAL      &none         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
&none      &none            &none        &none     &none       &none                    &kp UNDERSCORE  &kp PLUS       &none         &kp LEFT_BRACE        &kp RIGHT_BRACE        &none
&none      &none            &trans       &trans    &trans                       &trans  &trans                                                                                    &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp F1  &kp F2   &kp F3   &kp F4   &none              &none  &none  &none  &none  &none  &none
&none   &kp F5  &kp F6   &kp F7   &kp F8   &none              &none  &none  &none  &none  &none  &none
&none   &kp F9  &kp F10  &kp F11  &kp F12  &none              &none  &none  &none  &none  &none  &none
&trans  &trans  &trans   &trans   &trans              &trans  &mo 3                              &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &kp N1          &kp N2          &kp N3           &kp N4  &kp N5              &kp N6         &kp N7     &kp N8     &kp N9     &kp N0  &none
&none   &none           &kp UP_ARROW    &none            &none   &none               &kp PAGE_UP    &mkp LCLK  &mkp MCLK  &mkp RCLK  &none   &none
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none   &none               &kp PAGE_DOWN  &none      &none      &none      &none   &none
&trans  &trans          &trans          &trans           &trans              &trans  &trans                                                  &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
